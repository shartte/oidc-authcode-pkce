name: CI
on: push

jobs:
  # Check formatting of files with Prettier
  format-check:
    name: Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - run: npm ci
      - run: npm run format-check

  # Run ESLint on all files
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - run: npm ci
      - run: npm run lint

  # Run the typescript compiler to typecheck the files
  typecheck:
    name: Build Package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - run: npm ci
      - run: npm run build
      - run: npm pack
      - id: getfilename
        run: echo "::set-output name=file::$(ls oidc-authcode-pkce-*.tgz)"
      - uses: actions/upload-artifact@v1
        with:
          name: npm-package
          path: ${{ steps.getfilename.outputs.file }}

  # Run Karma Unit Tests
  test:
    name: Unit Tests
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        browser: [chrome, firefox, safari, ie]
        os: [windows-latest, ubuntu-latest, macos-latest]
        exclude:
          # Exclude Safari on anything but MacOS
          - browser: safari
            os: windows-latest
          - browser: safari
            os: ubuntu-latest
          # Exclude IE11 on anything but Windows
          - browser: ie
            os: ubuntu-latest
          - browser: ie
            os: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
      - run: npm ci
      # Launch Xvfb on Linux
      - run: echo "::set-env name=DISPLAY:::0" && Xvfb &
        if: matrix.os == 'ubuntu-latest'
      # Enable Safari WebDriver interface on Mac
      - run: sudo safaridriver --enable
        if: matrix.os == 'macos-latest' && matrix.browser == 'safari'
      - run: npm run test:${{ matrix.browser }}
      - uses: codecov/codecov-action@v1
        with:
          file: ./coverage/coverage-final.json
          flags: unittests
          fail_ci_if_error: true
